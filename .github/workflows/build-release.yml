name: Build and Release

on:
  push:
    tags:
      - "*"
  workflow_dispatch:

env:
  PACKAGE_NAME: luci-app-xray
  CACHE_DIR: ~/cache

jobs:
  release:
    name: Build ${{ matrix.arch }}-${{ matrix.sdk }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch:
          - aarch64_cortex-a53
          - aarch64_cortex-a72
          - aarch64_generic
          - arm_arm1176jzf-s_vfp
          - arm_arm926ej-s
          - arm_cortex-a15_neon-vfpv4
          - arm_cortex-a5_vfpv4
          - arm_cortex-a7
          - arm_cortex-a7_neon-vfpv4
          - arm_cortex-a8_vfpv3
          - arm_cortex-a9
          - arm_cortex-a9_neon
          - arm_cortex-a9_vfpv3-d16
          - arm_fa526
          - arm_mpcore
          - arm_xscale
          - i386_pentium-mmx
          - i386_pentium4
          - mips64_octeonplus
          - mips_24kc
          - mips_4kec
          - mips_mips32
          - mipsel_24kc
          - mipsel_24kc_24kf
          - mipsel_74kc
          - mipsel_mips32
          - x86_64
        sdk:
          - openwrt-22.03
          - SNAPSHOT

    env:
      SDK_URL_PATH: ${{ matrix.sdk_url_path }}
      SDK_NAME: ${{ matrix.sdk_name }}
      CCACHE_DIR: ~/.ccache
      CONFIG_CCACHE: y
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Prepare Cache Key
        id: cache_key
        run: echo "::set-output name=timestamp::$(date +"%s")"

      - name: Setup Cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.CACHE_DIR }}
            ${{ env.CCACHE_DIR }}
          key: openwrt-${{ matrix.arch }}-${{ env.PACKAGE_NAME }}-${{ steps.cache_key.outputs.timestamp }}
          restore-keys: |
            openwrt-${{ matrix.arch }}-${{ env.PACKAGE_NAME }}-
      - name: Install Dependencies
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt-get install -y ccache gettext libncurses5-dev xsltproc p7zip-full
      - name: Create Directories
        run: |
          CACHE_DIR_SDK="$(eval echo "$CACHE_DIR/sdk")"
          CACHE_DIR_DL="$(eval echo "$CACHE_DIR/dl")"
          CACHE_DIR_FEEDS="$(eval echo "$CACHE_DIR/feeds")"
          echo "CACHE_DIR_SDK: $CACHE_DIR_SDK"
          echo "CACHE_DIR_DL: $CACHE_DIR_DL"
          echo "CACHE_DIR_FEEDS: $CACHE_DIR_FEEDS"
          test -d "$CACHE_DIR_SDK" || mkdir -p "$CACHE_DIR_SDK"
          test -d "$CACHE_DIR_DL" || mkdir -p "$CACHE_DIR_DL"
          test -d "$CACHE_DIR_FEEDS" || mkdir -p "$CACHE_DIR_FEEDS"
          echo "CACHE_DIR_SDK=$CACHE_DIR_SDK" >> $GITHUB_ENV
          echo "CACHE_DIR_DL=$CACHE_DIR_DL" >> $GITHUB_ENV
          echo "CACHE_DIR_FEEDS=$CACHE_DIR_FEEDS" >> $GITHUB_ENV
          echo "SDK_HOME=$(mktemp -d)" >> $GITHUB_ENV
      - name: Download and Unzip SDK
        run: |
          cd "$CACHE_DIR_SDK"
          if ! ( wget -q -O - "$SDK_URL_PATH/sha256sums" | grep -- "$SDK_NAME" > sha256sums.small 2>/dev/null ) ; then
            echo "::error::Can not find ${SDK_NAME} file in sha256sums."
            exit 1
          fi
          SDK_FILE="$(cat sha256sums.small | cut -d' ' -f2 | sed 's/*//g')"
          if ! sha256sum -c ./sha256sums.small >/dev/null 2>&1 ; then
            wget -q -O "$SDK_FILE" "$SDK_URL_PATH/$SDK_FILE"
            if ! sha256sum -c ./sha256sums.small >/dev/null 2>&1 ; then
              echo "::error::SDK can not be verified!"
              exit 1
            fi
          fi
          cd -
          file "$CACHE_DIR_SDK/$SDK_FILE"
          7z x "$CACHE_DIR_SDK/$SDK_FILE" -so | tar -C "$SDK_HOME" -xvf - --strip=1
          cd "$SDK_HOME"
          test -d "dl" && rm -rf "dl" || true
          test -d "feeds" && rm -rf "feeds" || true
          ln -s "$CACHE_DIR_DL" "dl"
          ln -s "$CACHE_DIR_FEEDS" "feeds"
          cp feeds.conf.default feeds.conf
          sed -i 's#git.openwrt.org/openwrt/openwrt#github.com/openwrt/openwrt#' feeds.conf
          sed -i 's#git.openwrt.org/feed/packages#github.com/openwrt/packages#' feeds.conf
          sed -i 's#git.openwrt.org/project/luci#github.com/openwrt/luci#' feeds.conf
          sed -i 's#git.openwrt.org/feed/telephony#github.com/openwrt/telephony#' feeds.conf
          cd -
      - name: Update and Install Packages
        run: |
          cd "$SDK_HOME"
          ./scripts/feeds update -a
          ln -s "${{ github.workspace }}" "package/$PACKAGE_NAME"
          ./scripts/feeds install -a
          cd -
      - name: Building packages
        uses: sbwml/openwrt-gh-action-sdk@main
        env:
          ARCH: ${{ matrix.arch }}-${{ matrix.sdk }}
          FEEDNAME: packages_ci
          PACKAGES: luci-app-ddns-go
          NO_REFRESH_CHECK: true
          V: s

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.arch }}-${{ matrix.sdk }}
          path: bin/packages/${{ matrix.arch }}/packages_ci/*.[ai]pk

      - name: Create compress files
        run: |
          #tar -zcvf xray-${{ matrix.sdk }}-${{ matrix.arch }}.tar.gz -C bin/packages/${{ matrix.arch }}/ packages_ci
          zip -j xray-${{ matrix.arch }}-${{ matrix.sdk }}.zip bin/packages/${{ matrix.arch }}/packages_ci/*
          echo "build_time=$(date '+%Y年%m月%d日%H:%M:%S' | jq -sRr @uri)" >> $GITHUB_ENV

      - name: Release and Upload Assets
        uses: softprops/action-gh-release@v2
        tag_name: ${{ env.TAG }}
            files: xray-${{ matrix.arch }}-${{ matrix.sdk }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
